import { restore, popover } from "__support__/e2e/helpers";

describe("serialization WIP", () => {
  beforeEach(() => {
    cy.intercept("POST", "/api/dataset").as("dataset");

    restore("setup");
    cy.signInAsAdmin();
  });

  it("populates the app db", () => {
    cy.visit("/");
    cy.findByText(/Products$/).click();

    const automagicCards = Array(13).fill("@dataset");
    cy.wait(automagicCards);

    cy.button("Save this").click();
    // Auto generated parent collection (doesn't contain questions or dashboards)
    cy.findByText("Automatically Generated Dashboards").click();
    // Auto generated child collection with questions and dashboards
    cy.findByText("A look at your Products table").click();

    /**
     * Let's shuffle some questions around
     */
    openMenuForCollectionItem("Products added in the last 30 days");
    popover()
      .contains("Archive")
      .click();

    moveCollectionItemToAnotherCollection("Rating over time", "Our analytics");
    moveCollectionItemToAnotherCollection(
      "Days when Products were added",
      "My personal collection",
    );

    openMenuForCollectionItem("Total Products");
    popover()
      .contains("Pin this")
      .click();

    // Pin a question but disable visualization
    // openMenuForCollectionItem("New Products over time");
    // popover()
    //   .contains("Pin this")
    //   .click();

    // Bookmark already pinned autogenerated dashboard for easier access later on
    cy.findByTestId("pinned-items").within(() => {
      cy.findByText("A look at your Products table")
        .siblings()
        .find(".Icon-ellipsis")
        .click({ force: true });
    });

    popover()
      .contains("Bookmark")
      .click();
  });
});

function openMenuForCollectionItem(item) {
  cy.findByText(item)
    .closest("[data-testid=collection-entry")
    .find(".Icon-ellipsis")
    .click();
}

function moveCollectionItemToAnotherCollection(item, collection) {
  openMenuForCollectionItem(item);
  popover()
    .contains("Move")
    .click();

  cy.get(".Modal").within(() => {
    cy.findByTestId("item-picker-list")
      .contains(collection)
      .click();
    cy.button("Move").click();
  });
}
